{
  "contractName": "CoolSaurusKid",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/younghoon/yh/nft-sample/contracts/CoolSaurusKid.sol\":\"CoolSaurusKid\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/younghoon/yh/nft-sample/contracts/CoolSaurusKid.sol\":{\"keccak256\":\"0x63b3ad9bd0fd1647f77e33d3255898a797ec21de89b66a23cf825b7f8c06dc3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db37867280c6bad8faef13a93bb46d8b38cc85ef7b963b277030cf4bedca5f0f\",\"dweb:/ipfs/QmUHsaVoExeUzVE2ozDRFCB3D4P28GCWHYbDNS8UVRG5UD\"]},\"/Users/younghoon/yh/nft-sample/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x222f8fe532f72838fabfc6458b43d3655b55d4ed1c764f2248c725dba9989626\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74d917159e3b13cc1ed9eca0b101ffebc5f813d2020b773c7f81be5f5f86a86d\",\"dweb:/ipfs/QmT9b9P9JfPBmf4cLBpCguMTRdjk7JF6qqDKwXWGssfnNJ\"]},\"/Users/younghoon/yh/nft-sample/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x6edba116c3de120257f96a0e2cf286645d5b3317a06a20cbf933f1fa2166d7f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2ae40556690160edd76ca00a6a2f88947d127cb1de0d5ac4ae373d118eaecb7\",\"dweb:/ipfs/QmTuNz3XMXdbtLA5YQzdrXxYvpqiTpjegk2EuLeSRmrAHL\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x85b0888b86901488c68e1d5622803680b0c9f93b4d55c0373ce89bfb465657f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e15cd89caba40d8d785213d21c32981f470d720cf58d253df2715671010f32\",\"dweb:/ipfs/Qmbgh83oKFHGdJbBXWbM4zPAA4JwdZK9BfXS97e2hViSCB\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0xcfc0a167050f23a3f92853c3fbbdddbcc6d225c77cd3e64652c767ee25fa7ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00b56ac60fb17e8952ac722c6cb5254f999bc9f58c7369882f5c0335f1720252\",\"dweb:/ipfs/QmQPKw5NNyoiSKzQptxEdQ1cUZFgAeuKPsjcuMN4zpFDYJ\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x99ce9e2c0a810cc6e281c5da9c8b24cffb26f0da6dc9cf422a918f3604f24a02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1de6f77cfd4eef30c77aadb18f024f9d62497a846bbe90ec6d9b1ba8fe952f1\",\"dweb:/ipfs/QmSqJKA5ZyciDR4NXme3tjCyMxfkXMFTaTTGsjmfhZZEso\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/erc721.sol\":{\"keccak256\":\"0xc3ad568e38940de085b4beba2b74242a433de410bc0a5efb957d5afcf42d5453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d61b3a889568966553961a54939db431849ec3c4038dbe2ae108bc8cc92a0d55\",\"dweb:/ipfs/QmUiXGskuzSbdSydkDoLRGuxqN5MERxnXpfBy2WtkDCpNy\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x46c38a9fec47fafcb8f24bee0db43f127b75bf6af85566fa5c506c802426012d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f4f5537315665ddd4c2a83e6619785c83e32e6dde2070076536266830838c7d\",\"dweb:/ipfs/QmRizXzSxQYMgu2itbJcXEwVYWZxJAbY5yjVrQKXZCHrC6\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0xdfc9113ee9d6be39f76a577e5413244b6e49fd955c05fb0a4736760e83bb8529\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6a01f407d74f0a22293dfec41de64e75be4291ee882016c9227bafcff4d18c3\",\"dweb:/ipfs/QmRTATRodWivPbFMDpH9Aq4DxPrtYyLmNsMxT1oZHQeZhJ\"]},\"/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x12beffd91a48478e4de7d7db431682b56bd09ee7371de47f3b163c1db7e1a7b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d62b078005746c56ef747f6348d961fa7f96bb49d29a5b9f038c85b88ff4daf\",\"dweb:/ipfs/QmajbugaBtyYGiB6igx61RbnaRnkYhxS8pv1V7xQmG5vRP\"]},\"/Users/younghoon/yh/nft-sample/contracts/utils/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"/Users/younghoon/yh/nft-sample/contracts/utils/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]},\"/Users/younghoon/yh/nft-sample/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x334951ffc57e89f6a445855e3e5eb74daa60d8eebfbc6be26cd315af649e1a77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c67cbe0a1250f224990d9637546b4fc89c0e66e7dddda26b9952af88c024480\",\"dweb:/ipfs/QmZrzwVSXYfonakEtzxFNucZZcrE2PPym1MxoNum4fmXq5\"]},\"/Users/younghoon/yh/nft-sample/contracts/utils/erc165.sol\":{\"keccak256\":\"0x57c9cdf6c718ef3bf992dbe5bf6e238a97a0db929b1d71bedb88f22b1407cf60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c3bffa41ebb75195b260bc8a45e2800499e9c9b3d10b156062735000638f44c\",\"dweb:/ipfs/QmNoA2d9VxuZ642PNLGB36zaaBEwartjogtxDSqGjXFgpy\"]},\"/Users/younghoon/yh/nft-sample/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xf0daec317a540048091f2795f3bd7d31fe80858f5f17bf2c3936e112b18ec6e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c7a2248f7d03daafa1ff7547de55331875c8ae25b04ec8f48905016309be4db\",\"dweb:/ipfs/QmRq3jzFRVsuz63u2LURRCK9Ma81q1wRr3PXC765F4dAuK\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200254038038062002540833981016040819052620000349162000390565b600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c58054600160ff1991821681179092557ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed78080080548216831790557f77b7bbe0e49b76487c9476b5db3354cf5270619d0037ccb899c2a4c4a75b431880548216831790557f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df80548216831790557f7965db0b000000000000000000000000000000000000000000000000000000009093527f6058867f459625e0bd9134c0c23bd5f32ee9239a7fc4919b3707f730aeb5557080549093161790915582516200014891600991908501906200023f565b5080516200015e90600a9060208401906200023f565b506200016c60003362000174565b50506200047c565b62000180828262000184565b5050565b62000190828262000210565b62000180576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001cc6200023b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b8280546200024d90620003f7565b90600052602060002090601f016020900481019282620002715760008555620002bc565b82601f106200028c57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bc5782518255916020019190600101906200029f565b50620002ca929150620002ce565b5090565b5b80821115620002ca5760008155600101620002cf565b600082601f830112620002f6578081fd5b81516001600160401b03808211156200031357620003136200044d565b6040516020601f8401601f19168201810183811183821017156200033b576200033b6200044d565b604052838252858401810187101562000352578485fd5b8492505b8383101562000375578583018101518284018201529182019162000356565b838311156200038657848185840101525b5095945050505050565b60008060408385031215620003a3578182fd5b82516001600160401b0380821115620003ba578384fd5b620003c886838701620002e5565b93506020850151915080821115620003de578283fd5b50620003ed85828601620002e5565b9150509250929050565b6002810460018216806200040c57607f821691505b6020821081141562000447577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120b4806200048c6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80634f6ccce7116100de578063a22cb46511610097578063d3fc986411610071578063d3fc98641461033d578063d539139314610350578063d547741f14610358578063e985e9c51461036b5761018e565b8063a22cb46514610304578063b88d4fde14610317578063c87b56dd1461032a5761018e565b80634f6ccce7146102a85780636352211e146102bb57806370a08231146102ce57806391d14854146102e157806395d89b41146102f4578063a217fddf146102fc5761018e565b8063248a9ca31161014b5780632f745c59116101255780632f745c591461025c57806336568abe1461026f57806342842e0e1461028257806342966c68146102955761018e565b8063248a9ca31461022e578063282c51f3146102415780632f2ff15d146102495761018e565b806301ffc9a71461019357806306fdde03146101bc578063081812fc146101d1578063095ea7b3146101f157806318160ddd1461020657806323b872dd1461021b575b600080fd5b6101a66101a1366004611db7565b61037e565b6040516101b39190611ee1565b60405180910390f35b6101c46103a1565b6040516101b39190611ef5565b6101e46101df366004611d7d565b610433565b6040516101b39190611e90565b6102046101ff366004611cfc565b6104b5565b005b61020e610657565b6040516101b39190611eec565b610204610229366004611c1a565b61065d565b61020e61023c366004611d7d565b610818565b61020e61082d565b610204610257366004611d95565b610851565b61020e61026a366004611cfc565b610872565b61020461027d366004611d95565b610917565b610204610290366004611c1a565b61095d565b6102046102a3366004611d7d565b610978565b61020e6102b6366004611d7d565b6109ab565b6101e46102c9366004611d7d565b610a21565b61020e6102dc366004611bce565b610a79565b6101a66102ef366004611d95565b610ad0565b6101c4610afb565b61020e610b0a565b610204610312366004611cc2565b610b0f565b610204610325366004611c55565b610b7e565b6101c4610338366004611d7d565b610bc7565b61020461034b366004611d25565b610c33565b61020e610ca7565b610204610366366004611d95565b610ccb565b6101a6610379366004611be8565b610ce7565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6060600980546103b09061201d565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc9061201d565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104935760405162461bcd60e51b815260040161048a9190611ef5565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061050057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020016530303330303360d01b8152509061053d5760405162461bcd60e51b815260040161048a9190611ef5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166105975760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526506060666060760d31b918301919091526001600160a01b03908116919087168214156105f75760405162461bcd60e51b815260040161048a9190611ef5565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b60008181526001602052604090205481906001600160a01b03163381148061069b57506000828152600260205260409020546001600160a01b031633145b806106c957506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906107065760405162461bcd60e51b815260040161048a9190611ef5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166107605760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107bf5760405162461bcd60e51b815260040161048a9190611ef5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166108045760405162461bcd60e51b815260040161048a9190611ef5565b5061080f8686610d15565b50505050505050565b6000908152600c602052604090206001015490565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61085a82610818565b61086381610d90565b61086d8383610da4565b505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106108cb5760405162461bcd60e51b815260040161048a9190611ef5565b506001600160a01b038316600090815260076020526040902080548390811061090457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b61091f610e2b565b6001600160a01b0316816001600160a01b03161461094f5760405162461bcd60e51b815260040161048a90611f3d565b6109598282610e2f565b5050565b61086d83838360405180602001604052806000815250610eb4565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486109a281610d90565b61095982611162565b60055460408051808201909152600681526530303530303760d01b602082015260009183106109ed5760405162461bcd60e51b815260040161048a9190611ef5565b5060058281548110610a0f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104af5760405162461bcd60e51b815260040161048a9190611ef5565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b038316610ac05760405162461bcd60e51b815260040161048a9190611ef5565b50610aca82611182565b92915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600a80546103b09061201d565b600081565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b72908590611ee1565b60405180910390a35050565b610bc085858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610eb492505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610c225760405162461bcd60e51b815260040161048a9190611ef5565b50610c2c8361118d565b9392505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c5d81610d90565b610c67858561122f565b610bc08484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061128f92505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610cd482610818565b610cdd81610d90565b61086d8383610e2f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000818152600160205260409020546001600160a01b0316610d368261130e565b610d40818361132c565b610d4a8383611336565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610da181610d9c610e2b565b611340565b50565b610dae8282610ad0565b610959576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610de7610e2b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b610e398282610ad0565b15610959576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19169055610e70610e2b565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008281526001602052604090205482906001600160a01b031633811480610ef257506000828152600260205260409020546001600160a01b031633145b80610f2057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610f5d5760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610fb75760405162461bcd60e51b815260040161048a9190611ef5565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190891682146110165760405162461bcd60e51b815260040161048a9190611ef5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03881661105b5760405162461bcd60e51b815260040161048a9190611ef5565b506110668787610d15565b611078876001600160a01b03166113a4565b1561115857604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a02906110b29033908d908c908c90600401611ea4565b602060405180830381600087803b1580156110cc57600080fd5b505af11580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611dd3565b60408051808201909152600681526530303330303560d01b60208201529091506001600160e01b03198216630a85bd0160e11b146111555760405162461bcd60e51b815260040161048a9190611ef5565b50505b5050505050505050565b61116b816113e0565b6000818152600b60205260408120610da191611a9b565b6000610aca826114be565b6000818152600b602052604090208054606091906111aa9061201d565b80601f01602080910402602001604051908101604052809291908181526020018280546111d69061201d565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b50505050509050919050565b61123982826114d9565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0909101839055905461127c9190611fc3565b6000918252600660205260409091205550565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b03166112e85760405162461bcd60e51b815260040161048a9190611ef5565b506000838152600b60209081526040909120835161130892850190611ad7565b50505050565b600090815260026020526040902080546001600160a01b0319169055565b61095982826115bc565b6109598282611763565b61134a8282610ad0565b61095957611362816001600160a01b03166014611827565b61136d836020611827565b60405160200161137e929190611e1b565b60408051601f198184030181529082905262461bcd60e51b825261048a91600401611ef5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906113d85750808214155b949350505050565b6113e9816119d9565b60008181526006602052604081205460055490919061140a90600190611fc3565b905060006005828154811061142f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806005848154811061145e57634e487b7160e01b600052603260045260246000fd5b600091825260209091200155600580548061148957634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b6001600160a01b031660009081526007602052604090205490565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b03831661151d5760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156115755760405162461bcd60e51b815260040161048a9190611ef5565b506115808282611336565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146116175760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b0387168552600790925283205490929161165f91611fc3565b9050818114611712576001600160a01b03841660009081526007602052604081208054839081106116a057634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b0316815260200190815260200160002084815481106116f257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b038416600090815260076020526040902080548061174757634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156117ba5760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155808552600783529084208054808501825581865292852090920185905590925290546118149190611fc3565b6000918252600860205260409091205550565b60606000611836836002611fa4565b611841906002611f8c565b67ffffffffffffffff81111561186757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611891576020820181803683370190505b509050600360fc1b816000815181106118ba57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118f757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061191b846002611fa4565b611926906001611f8c565b90505b60018111156119ba576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061196857634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061198c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936119b381612006565b9050611929565b508315610c2c5760405162461bcd60e51b815260040161048a90611f08565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b0316611a325760405162461bcd60e51b815260040161048a9190611ef5565b506000828152600160205260409020546001600160a01b0316611a548361130e565b611a5e818461132c565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b508054611aa79061201d565b6000825580601f10611ab95750610da1565b601f016020900490600052602060002090810190610da19190611b5b565b828054611ae39061201d565b90600052602060002090601f016020900481019282611b055760008555611b4b565b82601f10611b1e57805160ff1916838001178555611b4b565b82800160010185558215611b4b579182015b82811115611b4b578251825591602001919060010190611b30565b50611b57929150611b5b565b5090565b5b80821115611b575760008155600101611b5c565b80356001600160a01b038116811461039c57600080fd5b60008083601f840112611b98578182fd5b50813567ffffffffffffffff811115611baf578182fd5b602083019150836020828501011115611bc757600080fd5b9250929050565b600060208284031215611bdf578081fd5b610c2c82611b70565b60008060408385031215611bfa578081fd5b611c0383611b70565b9150611c1160208401611b70565b90509250929050565b600080600060608486031215611c2e578081fd5b611c3784611b70565b9250611c4560208501611b70565b9150604084013590509250925092565b600080600080600060808688031215611c6c578081fd5b611c7586611b70565b9450611c8360208701611b70565b935060408601359250606086013567ffffffffffffffff811115611ca5578182fd5b611cb188828901611b87565b969995985093965092949392505050565b60008060408385031215611cd4578182fd5b611cdd83611b70565b915060208301358015158114611cf1578182fd5b809150509250929050565b60008060408385031215611d0e578182fd5b611d1783611b70565b946020939093013593505050565b60008060008060608587031215611d3a578384fd5b611d4385611b70565b935060208501359250604085013567ffffffffffffffff811115611d65578283fd5b611d7187828801611b87565b95989497509550505050565b600060208284031215611d8e578081fd5b5035919050565b60008060408385031215611da7578182fd5b82359150611c1160208401611b70565b600060208284031215611dc8578081fd5b8135610c2c81612068565b600060208284031215611de4578081fd5b8151610c2c81612068565b60008151808452611e07816020860160208601611fda565b601f01601f19169290920160200192915050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611e53816017850160208801611fda565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611e84816028840160208801611fda565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ed790830184611def565b9695505050505050565b901515815260200190565b90815260200190565b600060208252610c2c6020830184611def565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115611f9f57611f9f612052565b500190565b6000816000190483118215151615611fbe57611fbe612052565b500290565b600082821015611fd557611fd5612052565b500390565b60005b83811015611ff5578181015183820152602001611fdd565b838111156113085750506000910152565b60008161201557612015612052565b506000190190565b60028104600182168061203157607f821691505b602082108114156104af57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001600160e01b031981168114610da157600080fdfea264697066735822122082f397cc7dfb93ba52581882f96e8cc66422914ab2926b88b72c384b5e74f14c64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80634f6ccce7116100de578063a22cb46511610097578063d3fc986411610071578063d3fc98641461033d578063d539139314610350578063d547741f14610358578063e985e9c51461036b5761018e565b8063a22cb46514610304578063b88d4fde14610317578063c87b56dd1461032a5761018e565b80634f6ccce7146102a85780636352211e146102bb57806370a08231146102ce57806391d14854146102e157806395d89b41146102f4578063a217fddf146102fc5761018e565b8063248a9ca31161014b5780632f745c59116101255780632f745c591461025c57806336568abe1461026f57806342842e0e1461028257806342966c68146102955761018e565b8063248a9ca31461022e578063282c51f3146102415780632f2ff15d146102495761018e565b806301ffc9a71461019357806306fdde03146101bc578063081812fc146101d1578063095ea7b3146101f157806318160ddd1461020657806323b872dd1461021b575b600080fd5b6101a66101a1366004611db7565b61037e565b6040516101b39190611ee1565b60405180910390f35b6101c46103a1565b6040516101b39190611ef5565b6101e46101df366004611d7d565b610433565b6040516101b39190611e90565b6102046101ff366004611cfc565b6104b5565b005b61020e610657565b6040516101b39190611eec565b610204610229366004611c1a565b61065d565b61020e61023c366004611d7d565b610818565b61020e61082d565b610204610257366004611d95565b610851565b61020e61026a366004611cfc565b610872565b61020461027d366004611d95565b610917565b610204610290366004611c1a565b61095d565b6102046102a3366004611d7d565b610978565b61020e6102b6366004611d7d565b6109ab565b6101e46102c9366004611d7d565b610a21565b61020e6102dc366004611bce565b610a79565b6101a66102ef366004611d95565b610ad0565b6101c4610afb565b61020e610b0a565b610204610312366004611cc2565b610b0f565b610204610325366004611c55565b610b7e565b6101c4610338366004611d7d565b610bc7565b61020461034b366004611d25565b610c33565b61020e610ca7565b610204610366366004611d95565b610ccb565b6101a6610379366004611be8565b610ce7565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6060600980546103b09061201d565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc9061201d565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905090565b6000818152600160209081526040808320548151808301909252600682526518181998181960d11b9282019290925283916001600160a01b03166104935760405162461bcd60e51b815260040161048a9190611ef5565b60405180910390fd5b506000838152600260205260409020546001600160a01b031691505b50919050565b60008181526001602052604090205481906001600160a01b03163381148061050057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6040518060400160405280600681526020016530303330303360d01b8152509061053d5760405162461bcd60e51b815260040161048a9190611ef5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166105975760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526506060666060760d31b918301919091526001600160a01b03908116919087168214156105f75760405162461bcd60e51b815260040161048a9190611ef5565b5060008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60055490565b60008181526001602052604090205481906001600160a01b03163381148061069b57506000828152600260205260409020546001600160a01b031633145b806106c957506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b815250906107065760405162461bcd60e51b815260040161048a9190611ef5565b50600083815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528491906001600160a01b03166107605760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190881682146107bf5760405162461bcd60e51b815260040161048a9190611ef5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b0387166108045760405162461bcd60e51b815260040161048a9190611ef5565b5061080f8686610d15565b50505050505050565b6000908152600c602052604090206001015490565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61085a82610818565b61086381610d90565b61086d8383610da4565b505050565b6001600160a01b0382166000908152600760209081526040808320548151808301909252600682526530303530303760d01b928201929092529083106108cb5760405162461bcd60e51b815260040161048a9190611ef5565b506001600160a01b038316600090815260076020526040902080548390811061090457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b61091f610e2b565b6001600160a01b0316816001600160a01b03161461094f5760405162461bcd60e51b815260040161048a90611f3d565b6109598282610e2f565b5050565b61086d83838360405180602001604052806000815250610eb4565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486109a281610d90565b61095982611162565b60055460408051808201909152600681526530303530303760d01b602082015260009183106109ed5760405162461bcd60e51b815260040161048a9190611ef5565b5060058281548110610a0f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091526001600160a01b031690816104af5760405162461bcd60e51b815260040161048a9190611ef5565b60408051808201909152600681526530303330303160d01b60208201526000906001600160a01b038316610ac05760405162461bcd60e51b815260040161048a9190611ef5565b50610aca82611182565b92915050565b6000918252600c602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600a80546103b09061201d565b600081565b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b72908590611ee1565b60405180910390a35050565b610bc085858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610eb492505050565b5050505050565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b9183019190915260609183916001600160a01b0316610c225760405162461bcd60e51b815260040161048a9190611ef5565b50610c2c8361118d565b9392505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610c5d81610d90565b610c67858561122f565b610bc08484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061128f92505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610cd482610818565b610cdd81610d90565b61086d8383610e2f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000818152600160205260409020546001600160a01b0316610d368261130e565b610d40818361132c565b610d4a8383611336565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610da181610d9c610e2b565b611340565b50565b610dae8282610ad0565b610959576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610de7610e2b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b3390565b610e398282610ad0565b15610959576000828152600c602090815260408083206001600160a01b03851684529091529020805460ff19169055610e70610e2b565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008281526001602052604090205482906001600160a01b031633811480610ef257506000828152600260205260409020546001600160a01b031633145b80610f2057506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b604051806040016040528060068152602001650c0c0ccc0c0d60d21b81525090610f5d5760405162461bcd60e51b815260040161048a9190611ef5565b50600084815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528591906001600160a01b0316610fb75760405162461bcd60e51b815260040161048a9190611ef5565b50600085815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b039081169190891682146110165760405162461bcd60e51b815260040161048a9190611ef5565b5060408051808201909152600681526530303330303160d01b60208201526001600160a01b03881661105b5760405162461bcd60e51b815260040161048a9190611ef5565b506110668787610d15565b611078876001600160a01b03166113a4565b1561115857604051630a85bd0160e11b81526000906001600160a01b0389169063150b7a02906110b29033908d908c908c90600401611ea4565b602060405180830381600087803b1580156110cc57600080fd5b505af11580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611dd3565b60408051808201909152600681526530303330303560d01b60208201529091506001600160e01b03198216630a85bd0160e11b146111555760405162461bcd60e51b815260040161048a9190611ef5565b50505b5050505050505050565b61116b816113e0565b6000818152600b60205260408120610da191611a9b565b6000610aca826114be565b6000818152600b602052604090208054606091906111aa9061201d565b80601f01602080910402602001604051908101604052809291908181526020018280546111d69061201d565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b50505050509050919050565b61123982826114d9565b600580546001818101835560008390527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0909101839055905461127c9190611fc3565b6000918252600660205260409091205550565b600082815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528391906001600160a01b03166112e85760405162461bcd60e51b815260040161048a9190611ef5565b506000838152600b60209081526040909120835161130892850190611ad7565b50505050565b600090815260026020526040902080546001600160a01b0319169055565b61095982826115bc565b6109598282611763565b61134a8282610ad0565b61095957611362816001600160a01b03166014611827565b61136d836020611827565b60405160200161137e929190611e1b565b60408051601f198184030181529082905262461bcd60e51b825261048a91600401611ef5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906113d85750808214155b949350505050565b6113e9816119d9565b60008181526006602052604081205460055490919061140a90600190611fc3565b905060006005828154811061142f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806005848154811061145e57634e487b7160e01b600052603260045260246000fd5b600091825260209091200155600580548061148957634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255918152600690915260408082209390935592835250812055565b6001600160a01b031660009081526007602052604090205490565b60408051808201909152600681526530303330303160d01b60208201526001600160a01b03831661151d5760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156115755760405162461bcd60e51b815260040161048a9190611ef5565b506115808282611336565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815260016020908152604091829020548251808401909352600683526530303330303760d01b918301919091526001600160a01b038481169116146116175760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020818152604080842080546001600160a01b031916905560088252808420546001600160a01b0387168552600790925283205490929161165f91611fc3565b9050818114611712576001600160a01b03841660009081526007602052604081208054839081106116a057634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b0316815260200190815260200160002084815481106116f257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925591825260089052604090208290555b6001600160a01b038416600090815260076020526040902080548061174757634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600081815260016020908152604091829020548251808401909352600683526518181998181b60d11b918301919091526001600160a01b0316156117ba5760405162461bcd60e51b815260040161048a9190611ef5565b50600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155808552600783529084208054808501825581865292852090920185905590925290546118149190611fc3565b6000918252600860205260409091205550565b60606000611836836002611fa4565b611841906002611f8c565b67ffffffffffffffff81111561186757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611891576020820181803683370190505b509050600360fc1b816000815181106118ba57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118f757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061191b846002611fa4565b611926906001611f8c565b90505b60018111156119ba576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061196857634e487b7160e01b600052603260045260246000fd5b1a60f81b82828151811061198c57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936119b381612006565b9050611929565b508315610c2c5760405162461bcd60e51b815260040161048a90611f08565b600081815260016020908152604091829020548251808401909352600683526518181998181960d11b918301919091528291906001600160a01b0316611a325760405162461bcd60e51b815260040161048a9190611ef5565b506000828152600160205260409020546001600160a01b0316611a548361130e565b611a5e818461132c565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b508054611aa79061201d565b6000825580601f10611ab95750610da1565b601f016020900490600052602060002090810190610da19190611b5b565b828054611ae39061201d565b90600052602060002090601f016020900481019282611b055760008555611b4b565b82601f10611b1e57805160ff1916838001178555611b4b565b82800160010185558215611b4b579182015b82811115611b4b578251825591602001919060010190611b30565b50611b57929150611b5b565b5090565b5b80821115611b575760008155600101611b5c565b80356001600160a01b038116811461039c57600080fd5b60008083601f840112611b98578182fd5b50813567ffffffffffffffff811115611baf578182fd5b602083019150836020828501011115611bc757600080fd5b9250929050565b600060208284031215611bdf578081fd5b610c2c82611b70565b60008060408385031215611bfa578081fd5b611c0383611b70565b9150611c1160208401611b70565b90509250929050565b600080600060608486031215611c2e578081fd5b611c3784611b70565b9250611c4560208501611b70565b9150604084013590509250925092565b600080600080600060808688031215611c6c578081fd5b611c7586611b70565b9450611c8360208701611b70565b935060408601359250606086013567ffffffffffffffff811115611ca5578182fd5b611cb188828901611b87565b969995985093965092949392505050565b60008060408385031215611cd4578182fd5b611cdd83611b70565b915060208301358015158114611cf1578182fd5b809150509250929050565b60008060408385031215611d0e578182fd5b611d1783611b70565b946020939093013593505050565b60008060008060608587031215611d3a578384fd5b611d4385611b70565b935060208501359250604085013567ffffffffffffffff811115611d65578283fd5b611d7187828801611b87565b95989497509550505050565b600060208284031215611d8e578081fd5b5035919050565b60008060408385031215611da7578182fd5b82359150611c1160208401611b70565b600060208284031215611dc8578081fd5b8135610c2c81612068565b600060208284031215611de4578081fd5b8151610c2c81612068565b60008151808452611e07816020860160208601611fda565b601f01601f19169290920160200192915050565b60007f416363657373436f6e74726f6c3a206163636f756e742000000000000000000082528351611e53816017850160208801611fda565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611e84816028840160208801611fda565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ed790830184611def565b9695505050505050565b901515815260200190565b90815260200190565b600060208252610c2c6020830184611def565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115611f9f57611f9f612052565b500190565b6000816000190483118215151615611fbe57611fbe612052565b500290565b600082821015611fd557611fd5612052565b500390565b60005b83811015611ff5578181015183820152602001611fdd565b838111156113085750506000910152565b60008161201557612015612052565b506000190190565b60028104600182168061203157607f821691505b602082108114156104af57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001600160e01b031981168114610da157600080fdfea264697066735822122082f397cc7dfb93ba52581882f96e8cc66422914ab2926b88b72c384b5e74f14c64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "181:1837:0:-:0;;;413:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;429:19:18;:31;;;;;:38;;463:4;-1:-1:-1;;429:38:18;;;;;;;;2776:31:11;:38;;;;;;;;1007:31:9;:38;;;;;;;;709:31:10;:38;;;;;;;;2578:31:2;;;;;:38;;;;;;;;;483:15:0;;;;:7;;:15;;;;;:::i;:::-;-1:-1:-1;508:19:0;;;;:9;;:19;;;;;:::i;:::-;-1:-1:-1;546:42:0;2081:4:2;577:10:0;546;:42::i;:::-;413:182;;181:1837;;6476:110:2;6554:25;6565:4;6571:7;6554:10;:25::i;:::-;6476:110;;:::o;7080:233::-;7163:22;7171:4;7177:7;7163;:22::i;:::-;7158:149;;7201:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7201:29:2;;;;;;;;;:36;;-1:-1:-1;;7201:36:2;7233:4;7201:36;;;7283:12;:10;:12::i;:::-;-1:-1:-1;;;;;7256:40:2;7274:7;-1:-1:-1;;;;;7256:40:2;7268:4;7256:40;;;;;;;;;;7080:233;;:::o;2731:145::-;2817:4;2840:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2840:29:2;;;;;;;;;;;;;;;2731:145::o;640:96:12:-;719:10;640:96;:::o;181:1837:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;181:1837:0;;;-1:-1:-1;181:1837:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:19;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:19;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:19;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:19;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:19;80:815;-1:-1:-1;;;;;80:815:19:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:19;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:437::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1788:77;1785:1;1778:88;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1714:2;;1556:382;;;:::o;1943:184::-;1995:77;1992:1;1985:88;2092:4;2089:1;2082:15;2116:4;2113:1;2106:15;1975:152;181:1837:0;;;;;;",
  "deployedSourceMap": "181:1837:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:163:18;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;891:113:10;;;:::i;:::-;;;;;;;:::i;7909:173:11:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5770:338::-;;;;;;:::i;:::-;;:::i;:::-;;1175:113:9;;;:::i;:::-;;;;;;;:::i;5020:338:11:-;;;;;;:::i;:::-;;:::i;4227:129:2:-;;;;;;:::i;:::-;;:::i;344:62:0:-;;;:::i;4606:145:2:-;;;;;;:::i;:::-;;:::i;1840:240:9:-;;;;;;:::i;:::-;;:::i;5623:214:2:-;;;;;;:::i;:::-;;:::i;4286:170:11:-;;;;;;:::i;:::-;;:::i;813:121:0:-;;;;;;:::i;:::-;;:::i;1422:189:9:-;;;;;;:::i;:::-;;:::i;7475:198:11:-;;;;;;:::i;:::-;;:::i;7019:194::-;;;;;;:::i;:::-;;:::i;2731:145:2:-;;;;;;:::i;:::-;;:::i;1114:121:10:-;;;:::i;2036:49:2:-;;;:::i;6510:223:11:-;;;;;;:::i;:::-;;:::i;3687:199::-;;;;;;:::i;:::-;;:::i;1381:173:10:-;;;;;;:::i;:::-;;:::i;601:206:0:-;;;;;;:::i;:::-;;:::i;276:62::-;;;:::i;4985:147:2:-;;;;;;:::i;:::-;;:::i;8343:182:11:-;;;;;;:::i;:::-;;:::i;685:163:18:-;-1:-1:-1;;;;;;810:33:18;;789:4;810:33;;;;;;;;;;;;;685:163;;;;:::o;891:113:10:-;955:19;992:7;984:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:113;:::o;7909:173:11:-;8031:7;2645:19;;;:9;:19;;;;;;;;;2680:13;;;;;;;;;;;-1:-1:-1;;;2680:13:11;;;;;;;8008:8;;-1:-1:-1;;;;;2645:19:11;2637:57;;;;-1:-1:-1;;;2637:57:11;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;8055:22:11::1;::::0;;;:12:::1;:22;::::0;;;;;-1:-1:-1;;;;;8055:22:11::1;::::0;-1:-1:-1;2700:1:11::1;7909:173:::0;;;;:::o;5770:338::-;1863:18;1884:19;;;:9;:19;;;;;;5877:8;;-1:-1:-1;;;;;1884:19:11;1938:10;1924:24;;;:68;;-1:-1:-1;;;;;;1952:28:11;;;;;;:16;:28;;;;;;;;1981:10;1952:40;;;;;;;;;;1924:68;2000:21;;;;;;;;;;;;;-1:-1:-1;;;2000:21:11;;;1909:118;;;;;-1:-1:-1;;;1909:118:11;;;;;;;;:::i;:::-;-1:-1:-1;2676:1:11::1;2645:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2680:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2680:13:11;;::::1;::::0;;;;5904:8;;2680:13;-1:-1:-1;;;;;2645:19:11::1;2637:57;;;;-1:-1:-1::0;;;2637:57:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5922:18:11::2;5943:19:::0;;;:9:::2;:19;::::0;;;;;;;;;6001:8;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;6001:8:11;;::::2;::::0;;;;-1:-1:-1;;;;;5943:19:11;;::::2;::::0;6001:8;5976:23;::::2;::::0;::::2;;5968:42;;;;-1:-1:-1::0;;;5968:42:11::2;;;;;;;;:::i;:::-;-1:-1:-1::0;6017:22:11::2;::::0;;;:12:::2;:22;::::0;;;;;:34;;-1:-1:-1;;;;;;6017:34:11::2;-1:-1:-1::0;;;;;6017:34:11;;::::2;::::0;;::::2;::::0;;;6062:41;;6017:22;;6062:41;;::::2;::::0;::::2;::::0;::::2;2700:1;2033::::1;5770:338:::0;;;;:::o;1175:113:9:-;1270:6;:13;1175:113;:::o;5020:338:11:-;2227:18;2248:19;;;:9;:19;;;;;;5146:8;;-1:-1:-1;;;;;2248:19:11;2302:10;2288:24;;;:70;;-1:-1:-1;2322:22:11;;;;:12;:22;;;;;;-1:-1:-1;;;;;2322:22:11;2348:10;2322:36;2288:70;:120;;;-1:-1:-1;;;;;;2368:28:11;;;;;;:16;:28;;;;;;;;2397:10;2368:40;;;;;;;;;;2288:120;2416:30;;;;;;;;;;;;;-1:-1:-1;;;2416:30:11;;;2273:179;;;;;-1:-1:-1;;;2273:179:11;;;;;;;;:::i;:::-;-1:-1:-1;2676:1:11::1;2645:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2680:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2680:13:11;;::::1;::::0;;;;5173:8;;2680:13;-1:-1:-1;;;;;2645:19:11::1;2637:57;;;;-1:-1:-1::0;;;2637:57:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;5191:18:11::2;5212:19:::0;;;:9:::2;:19;::::0;;;;;;;;;5266:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5266:9:11;;::::2;::::0;;;;-1:-1:-1;;;;;5212:19:11;;::::2;::::0;5266:9;5245:19;::::2;::::0;::::2;5237:39;;;;-1:-1:-1::0;;;5237:39:11::2;;;;;;;;:::i;:::-;-1:-1:-1::0;5309:12:11::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;5309:12:11::2;::::0;::::2;::::0;-1:-1:-1;;;;;5290:17:11;::::2;5282:40;;;;-1:-1:-1::0;;;5282:40:11::2;;;;;;;;:::i;:::-;;5329:24;5339:3;5344:8;5329:9;:24::i;:::-;2700:1;2458::::1;5020:338:::0;;;;;:::o;4227:129:2:-;4301:7;4327:12;;;:6;:12;;;;;:22;;;;4227:129::o;344:62:0:-;382:24;344:62;:::o;4606:145:2:-;4689:18;4702:4;4689:12;:18::i;:::-;2514:16;2525:4;2514:10;:16::i;:::-;4719:25:::1;4730:4;4736:7;4719:10;:25::i;:::-;4606:145:::0;;;:::o;1840:240:9:-;-1:-1:-1;;;;;1995:18:9;;1961:7;1995:18;;;:10;:18;;;;;;;;:25;2022:13;;;;;;;;;;;-1:-1:-1;;;2022:13:9;;;;;;;;1986:34;;1978:58;;;;-1:-1:-1;;;1978:58:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2049:18:9;;;;;;:10;:18;;;;;:26;;2068:6;;2049:26;;;;-1:-1:-1;;;2049:26:9;;;;;;;;;;;;;;;;;2042:33;;1840:240;;;;:::o;5623:214:2:-;5729:12;:10;:12::i;:::-;-1:-1:-1;;;;;5718:23:2;:7;-1:-1:-1;;;;;5718:23:2;;5710:83;;;;-1:-1:-1;;;5710:83:2;;;;;;;:::i;:::-;5804:26;5816:4;5822:7;5804:11;:26::i;:::-;5623:214;;:::o;4286:170:11:-;4408:43;4426:5;4433:3;4438:8;4408:43;;;;;;;;;;;;:17;:43::i;813:121:0:-;382:24;2514:16:2;2525:4;2514:10;:16::i;:::-;906:21:0::1;918:8;906:11;:21::i;1422:189:9:-:0;1550:6;:13;1565;;;;;;;;;;;;-1:-1:-1;;;1565:13:9;;;;1516:7;;1541:22;;1533:46;;;;-1:-1:-1;;;1533:46:9;;;;;;;;:::i;:::-;;1592:6;1599;1592:14;;;;;;-1:-1:-1;;;1592:14:9;;;;;;;;;;;;;;;;;1585:21;;1422:189;;;:::o;7475:198:11:-;7566:14;7599:19;;;:9;:19;;;;;;;;;;7654:13;;;;;;;;;;;-1:-1:-1;;;7654:13:11;;;;;;;-1:-1:-1;;;;;7599:19:11;;7632:20;7624:44;;;;-1:-1:-1;;;7624:44:11;;;;;;;;:::i;7019:194::-;7157:12;;;;;;;;;;;;-1:-1:-1;;;7157:12:11;;;;7110:7;;-1:-1:-1;;;;;7135:20:11;;7127:43;;;;-1:-1:-1;;;7127:43:11;;;;;;;;:::i;:::-;;7183:25;7201:6;7183:17;:25::i;:::-;7176:32;7019:194;-1:-1:-1;;7019:194:11:o;2731:145:2:-;2817:4;2840:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2840:29:2;;;;;;;;;;;;;;;2731:145::o;1114:121:10:-;1180:21;1221:9;1211:19;;;;;:::i;2036:49:2:-;2081:4;2036:49;:::o;6510:223:11:-;6635:10;6618:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;6618:39:11;;;;;;;;;;;:51;;-1:-1:-1;;6618:51:11;;;;;;;6680:48;;6618:39;;6635:10;6680:48;;;;6618:51;;6680:48;:::i;:::-;;;;;;;;6510:223;;:::o;3687:199::-;3835:46;3853:5;3860:3;3865:8;3875:5;;3835:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3835:17:11;;-1:-1:-1;;;3835:46:11:i;:::-;3687:199;;;;;:::o;1381:173:10:-;2676:1:11;2645:19;;;:9;:19;;;;;;;;;;2680:13;;;;;;;;;;;-1:-1:-1;;;2680:13:11;;;;;;;1500::10;;1477:8;;-1:-1:-1;;;;;2645:19:11;2637:57;;;;-1:-1:-1;;;2637:57:11;;;;;;;;:::i;:::-;;1530:19:10::1;1540:8;1530:9;:19::i;:::-;1523:26:::0;1381:173;-1:-1:-1;;;1381:173:10:o;601:206:0:-;314:24;2514:16:2;2525:4;2514:10;:16::i;:::-;730:26:0::1;742:3;747:8;730:11;:26::i;:::-;766:34;785:8;795:4;;766:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;766:18:0::1;::::0;-1:-1:-1;;;766:34:0:i:1;276:62::-:0;314:24;276:62;:::o;4985:147:2:-;5069:18;5082:4;5069:12;:18::i;:::-;2514:16;2525:4;2514:10;:16::i;:::-;5099:26:::1;5111:4;5117:7;5099:11;:26::i;8343:182:11:-:0;-1:-1:-1;;;;;8485:24:11;;;8464:4;8485:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;8343:182::o;8708:274::-;8803:12;8818:19;;;:9;:19;;;;;;-1:-1:-1;;;;;8818:19:11;8843:24;8828:8;8843:14;:24::i;:::-;8874:30;8889:4;8895:8;8874:14;:30::i;:::-;8910:26;8922:3;8927:8;8910:11;:26::i;:::-;8968:8;8963:3;-1:-1:-1;;;;;8948:29:11;8957:4;-1:-1:-1;;;;;8948:29:11;;;;;;;;;;;8708:274;;;:::o;3170:103:2:-;3236:30;3247:4;3253:12;:10;:12::i;:::-;3236:10;:30::i;:::-;3170:103;:::o;7080:233::-;7163:22;7171:4;7177:7;7163;:22::i;:::-;7158:149;;7201:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7201:29:2;;;;;;;;;:36;;-1:-1:-1;;7201:36:2;7233:4;7201:36;;;7283:12;:10;:12::i;:::-;-1:-1:-1;;;;;7256:40:2;7274:7;-1:-1:-1;;;;;7256:40:2;7268:4;7256:40;;;;;;;;;;7080:233;;:::o;640:96:12:-;719:10;640:96;:::o;7438:234:2:-;7521:22;7529:4;7535:7;7521;:22::i;:::-;7517:149;;;7591:5;7559:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7559:29:2;;;;;;;;;:37;;-1:-1:-1;;7559:37:2;;;7642:12;:10;:12::i;:::-;-1:-1:-1;;;;;7615:40:2;7633:7;-1:-1:-1;;;;;7615:40:2;7627:4;7615:40;;;;;;;;;;7438:234;;:::o;12003:569:11:-;2227:18;2248:19;;;:9;:19;;;;;;12144:8;;-1:-1:-1;;;;;2248:19:11;2302:10;2288:24;;;:70;;-1:-1:-1;2322:22:11;;;;:12;:22;;;;;;-1:-1:-1;;;;;2322:22:11;2348:10;2322:36;2288:70;:120;;;-1:-1:-1;;;;;;2368:28:11;;;;;;:16;:28;;;;;;;;2397:10;2368:40;;;;;;;;;;2288:120;2416:30;;;;;;;;;;;;;-1:-1:-1;;;2416:30:11;;;2273:179;;;;;-1:-1:-1;;;2273:179:11;;;;;;;;:::i;:::-;-1:-1:-1;2676:1:11::1;2645:19:::0;;;:9:::1;:19;::::0;;;;;;;;;2680:13;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2680:13:11;;::::1;::::0;;;;12171:8;;2680:13;-1:-1:-1;;;;;2645:19:11::1;2637:57;;;;-1:-1:-1::0;;;2637:57:11::1;;;;;;;;:::i;:::-;-1:-1:-1::0;12189:18:11::2;12210:19:::0;;;:9:::2;:19;::::0;;;;;;;;;12264:9;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12264:9:11;;::::2;::::0;;;;-1:-1:-1;;;;;12210:19:11;;::::2;::::0;12264:9;12243:19;::::2;::::0;::::2;12235:39;;;;-1:-1:-1::0;;;12235:39:11::2;;;;;;;;:::i;:::-;-1:-1:-1::0;12307:12:11::2;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12307:12:11::2;::::0;::::2;::::0;-1:-1:-1;;;;;12288:17:11;::::2;12280:40;;;;-1:-1:-1::0;;;12280:40:11::2;;;;;;;;:::i;:::-;;12327:24;12337:3;12342:8;12327:9;:24::i;:::-;12362:16;:3;-1:-1:-1::0;;;;;12362:14:11::2;;:16::i;:::-;12358:210;;;12408:77;::::0;-1:-1:-1;;;12408:77:11;;12392:13:::2;::::0;-1:-1:-1;;;;;12408:41:11;::::2;::::0;::::2;::::0;:77:::2;::::0;12450:10:::2;::::0;12462:5;;12469:8;;12479:5;;12408:77:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12537:23;::::0;;;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;;;12537:23:11::2;::::0;::::2;::::0;12392:93;;-1:-1:-1;;;;;;;12501:34:11;::::2;-1:-1:-1::0;;;12501:34:11::2;12493:68;;;;-1:-1:-1::0;;;12493:68:11::2;;;;;;;;:::i;:::-;;12358:210;;2700:1;2458::::1;12003:569:::0;;;;;;:::o;2317:144:10:-;2404:21;2416:8;2404:11;:21::i;:::-;2439:17;;;;:7;:17;;;;;2432:24;;;:::i;1801:215:0:-;1936:7;1966:43;2002:6;1966:35;:43::i;1780:144:10:-;1902:17;;;;:7;:17;;;;;1895:24;;1872:13;;1902:17;1895:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:144;;;:::o;2461:207:9:-;2565:26;2577:3;2582:8;2565:11;:26::i;:::-;2597:6;:21;;;;;;;;-1:-1:-1;2597:21:9;;;;;;;;;;2646:13;;:17;;2597:21;2646:17;:::i;:::-;2624:19;;;;:9;:19;;;;;;:39;-1:-1:-1;2461:207:9:o;2846:149:10:-;2676:1:11;2645:19;;;:9;:19;;;;;;;;;;2680:13;;;;;;;;;;;-1:-1:-1;;;2680:13:11;;;;;;;2948:8:10;;2680:13:11;-1:-1:-1;;;;;2645:19:11;2637:57;;;;-1:-1:-1;;;2637:57:11;;;;;;;;:::i;:::-;-1:-1:-1;2966:17:10::1;::::0;;;:7:::1;:17;::::0;;;;;;;:24;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2846:149:::0;;;:::o;12699:104:11:-;12776:22;;;;:12;:22;;;;;12769:29;;-1:-1:-1;;;;;;12769:29:11;;;12699:104::o;1421:189:0:-;1554:49;1587:5;1594:8;1554:32;:49::i;1616:179::-;1744:44;1774:3;1779:8;1744:29;:44::i;3554:492:2:-;3642:22;3650:4;3656:7;3642;:22::i;:::-;3637:403;;3825:41;3853:7;-1:-1:-1;;;;;3825:41:2;3863:2;3825:19;:41::i;:::-;3937:38;3965:4;3972:2;3937:19;:38::i;:::-;3732:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3732:265:2;;;;;;;;;;-1:-1:-1;;;3680:349:2;;;;;;;:::i;467:762:14:-;545:17;1116:18;;1021:66;1181:15;;;;;:42;;;1212:11;1200:8;:23;;1181:42;1165:59;467:762;-1:-1:-1;;;;467:762:14:o;3061:476:9:-;3148:21;3160:8;3148:11;:21::i;:::-;3176:18;3197:19;;;:9;:19;;;;;;3247:6;:13;3197:19;;3176:18;3247:17;;3263:1;;3247:17;:::i;:::-;3222:42;;3270:17;3290:6;3297:14;3290:22;;;;;;-1:-1:-1;;;3290:22:9;;;;;;;;;;;;;;;;;3270:42;;3340:9;3319:6;3326:10;3319:18;;;;;;-1:-1:-1;;;3319:18:9;;;;;;;;;;;;;;;;;;:30;3356:6;:12;;;;;-1:-1:-1;;;3356:12:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3356:12:9;;;;;;;;;;;;3470:20;;;:9;:20;;;;;;;:33;;;;3509:19;;;-1:-1:-1;3509:19:9;;:23;3061:476::o;5242:165::-;-1:-1:-1;;;;;5377:18:9;5353:7;5377:18;;;:10;:18;;;;;:25;;5242:165::o;9363:284:11:-;9481:12;;;;;;;;;;;;-1:-1:-1;;;9481:12:11;;;;-1:-1:-1;;;;;9462:17:11;;9454:40;;;;-1:-1:-1;;;9454:40:11;;;;;;;;:::i;:::-;-1:-1:-1;9539:1:11;9508:19;;;:9;:19;;;;;;;;;;9543:18;;;;;;;;;;;-1:-1:-1;;;9543:18:11;;;;;;;-1:-1:-1;;;;;9508:19:11;:33;9500:62;;;;-1:-1:-1;;;9500:62:11;;;;;;;;:::i;:::-;;9569:26;9581:3;9586:8;9569:11;:26::i;:::-;9607:35;;9633:8;;-1:-1:-1;;;;;9607:35:11;;;9624:1;;9607:35;;9624:1;;9607:35;9363:284;;:::o;3808:580:9:-;3931:19;;;;:9;:19;;;;;;;;;;3961:9;;;;;;;;;;;-1:-1:-1;;;3961:9:9;;;;;;;-1:-1:-1;;;;;3931:28:9;;;:19;;:28;3923:48;;;;-1:-1:-1;;;3923:48:9;;;;;;;;:::i;:::-;-1:-1:-1;3984:19:9;;;;:9;:19;;;;;;;;3977:26;;-1:-1:-1;;;;;;3977:26:9;;;4039:14;:24;;;;;;-1:-1:-1;;;;;4094:17:9;;;;:10;:17;;;;;:24;4039;;3984:19;4094:28;;;:::i;:::-;4069:53;;4151:18;4133:14;:36;4129:225;;-1:-1:-1;;;;;4203:17:9;;4183;4203;;;:10;:17;;;;;:33;;4221:14;;4203:33;;;;-1:-1:-1;;;4203:33:9;;;;;;;;;;;;;;;;;4183:53;;4284:9;4244:10;:17;4255:5;-1:-1:-1;;;;;4244:17:9;-1:-1:-1;;;;;4244:17:9;;;;;;;;;;;;4262:18;4244:37;;;;;;-1:-1:-1;;;4244:37:9;;;;;;;;;;;;;;;;;;;;:49;;;;4301:25;;;:14;:25;;;;;:46;;;4129:225;-1:-1:-1;;;;;4360:17:9;;;;;;:10;:17;;;;;:23;;;;;-1:-1:-1;;;4360:23:9;;;;;;;;;;;;;;;;;;;;;;;;;;3808:580;;;;:::o;4651:304::-;4800:1;4769:19;;;:9;:19;;;;;;;;;;4804:18;;;;;;;;;;;-1:-1:-1;;;4804:18:9;;;;;;;-1:-1:-1;;;;;4769:19:9;:33;4761:62;;;;-1:-1:-1;;;4761:62:9;;;;;;;;:::i;:::-;-1:-1:-1;4829:19:9;;;;:9;:19;;;;;;;;:25;;-1:-1:-1;;;;;;4829:25:9;-1:-1:-1;;;;;4829:25:9;;;;;;;;4861:15;;;:10;:15;;;;;:30;;;;;;;;;;;;;;;;;;;4924:15;;;:22;;:26;;4829:9;4924:26;:::i;:::-;4897:24;;;;:14;:24;;;;;;:53;-1:-1:-1;4651:304:9:o;1588:441:13:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;-1:-1:-1;;;1710:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:13;;1688:47;;-1:-1:-1;;;1745:6:13;1752:1;1745:9;;;;;;-1:-1:-1;;;1745:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1745:15:13;;;;;;;;;-1:-1:-1;;;1770:6:13;1777:1;1770:9;;;;;;-1:-1:-1;;;1770:9:13;;;;;;;;;;;;:15;-1:-1:-1;;;;;1770:15:13;;;;;;;;-1:-1:-1;1800:9:13;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:13;1887:3;1879:11;1866:25;;;;;-1:-1:-1;;;1866:25:13;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;-1:-1:-1;;;1854:9:13;;;;;;;;;;;;:37;-1:-1:-1;;;;;1854:37:13;;;;;;;;-1:-1:-1;1915:1:13;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:13;;1936:55;;;;-1:-1:-1;;;1936:55:13;;;;;;;:::i;10040:271:11:-;2676:1;2645:19;;;:9;:19;;;;;;;;;;2680:13;;;;;;;;;;;-1:-1:-1;;;2680:13:11;;;;;;;10123:8;;2680:13;-1:-1:-1;;;;;2645:19:11;2637:57;;;;-1:-1:-1;;;2637:57:11;;;;;;;;:::i;:::-;-1:-1:-1;10141:18:11::1;10162:19:::0;;;:9:::1;:19;::::0;;;;;-1:-1:-1;;;;;10162:19:11::1;10187:24;10172:8:::0;10187:14:::1;:24::i;:::-;10217:36;10232:10;10244:8;10217:14;:36::i;:::-;10264:42;::::0;10297:8;;10293:1:::1;::::0;-1:-1:-1;;;;;10264:42:11;::::1;::::0;::::1;::::0;10293:1;;10264:42:::1;2700:1;10040:271:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:175:19;84:20;;-1:-1:-1;;;;;133:31:19;;123:42;;113:2;;179:1;176;169:12;194:377;;;311:3;304:4;296:6;292:17;288:27;278:2;;336:8;326;319:26;278:2;-1:-1:-1;366:20:19;;409:18;398:30;;395:2;;;448:8;438;431:26;395:2;492:4;484:6;480:17;468:29;;544:3;537:4;528:6;520;516:19;512:30;509:39;506:2;;;561:1;558;551:12;506:2;268:303;;;;;:::o;576:198::-;;688:2;676:9;667:7;663:23;659:32;656:2;;;709:6;701;694:22;656:2;737:31;758:9;737:31;:::i;779:274::-;;;908:2;896:9;887:7;883:23;879:32;876:2;;;929:6;921;914:22;876:2;957:31;978:9;957:31;:::i;:::-;947:41;;1007:40;1043:2;1032:9;1028:18;1007:40;:::i;:::-;997:50;;866:187;;;;;:::o;1058:342::-;;;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;1225:6;1217;1210:22;1172:2;1253:31;1274:9;1253:31;:::i;:::-;1243:41;;1303:40;1339:2;1328:9;1324:18;1303:40;:::i;:::-;1293:50;;1390:2;1379:9;1375:18;1362:32;1352:42;;1162:238;;;;;:::o;1405:652::-;;;;;;1587:3;1575:9;1566:7;1562:23;1558:33;1555:2;;;1609:6;1601;1594:22;1555:2;1637:31;1658:9;1637:31;:::i;:::-;1627:41;;1687:40;1723:2;1712:9;1708:18;1687:40;:::i;:::-;1677:50;;1774:2;1763:9;1759:18;1746:32;1736:42;;1829:2;1818:9;1814:18;1801:32;1856:18;1848:6;1845:30;1842:2;;;1893:6;1885;1878:22;1842:2;1937:60;1989:7;1980:6;1969:9;1965:22;1937:60;:::i;:::-;1545:512;;;;-1:-1:-1;1545:512:19;;-1:-1:-1;2016:8:19;;1911:86;1545:512;-1:-1:-1;;;1545:512:19:o;2062:369::-;;;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2209:6;2201;2194:22;2156:2;2237:31;2258:9;2237:31;:::i;:::-;2227:41;;2318:2;2307:9;2303:18;2290:32;2365:5;2358:13;2351:21;2344:5;2341:32;2331:2;;2392:6;2384;2377:22;2331:2;2420:5;2410:15;;;2146:285;;;;;:::o;2436:266::-;;;2565:2;2553:9;2544:7;2540:23;2536:32;2533:2;;;2586:6;2578;2571:22;2533:2;2614:31;2635:9;2614:31;:::i;:::-;2604:41;2692:2;2677:18;;;;2664:32;;-1:-1:-1;;;2523:179:19:o;2707:576::-;;;;;2873:2;2861:9;2852:7;2848:23;2844:32;2841:2;;;2894:6;2886;2879:22;2841:2;2922:31;2943:9;2922:31;:::i;:::-;2912:41;;3000:2;2989:9;2985:18;2972:32;2962:42;;3055:2;3044:9;3040:18;3027:32;3082:18;3074:6;3071:30;3068:2;;;3119:6;3111;3104:22;3068:2;3163:60;3215:7;3206:6;3195:9;3191:22;3163:60;:::i;:::-;2831:452;;;;-1:-1:-1;3242:8:19;-1:-1:-1;;;;2831:452:19:o;3288:190::-;;3400:2;3388:9;3379:7;3375:23;3371:32;3368:2;;;3421:6;3413;3406:22;3368:2;-1:-1:-1;3449:23:19;;3358:120;-1:-1:-1;3358:120:19:o;3483:266::-;;;3612:2;3600:9;3591:7;3587:23;3583:32;3580:2;;;3633:6;3625;3618:22;3580:2;3674:9;3661:23;3651:33;;3703:40;3739:2;3728:9;3724:18;3703:40;:::i;3754:257::-;;3865:2;3853:9;3844:7;3840:23;3836:32;3833:2;;;3886:6;3878;3871:22;3833:2;3930:9;3917:23;3949:32;3975:5;3949:32;:::i;4016:261::-;;4138:2;4126:9;4117:7;4113:23;4109:32;4106:2;;;4159:6;4151;4144:22;4106:2;4196:9;4190:16;4215:32;4241:5;4215:32;:::i;4477:259::-;;4558:5;4552:12;4585:6;4580:3;4573:19;4601:63;4657:6;4650:4;4645:3;4641:14;4634:4;4627:5;4623:16;4601:63;:::i;:::-;4718:2;4697:15;-1:-1:-1;;4693:29:19;4684:39;;;;4725:4;4680:50;;4528:208;-1:-1:-1;;4528:208:19:o;4741:786::-;;5152:25;5147:3;5140:38;5207:6;5201:13;5223:62;5278:6;5273:2;5268:3;5264:12;5257:4;5249:6;5245:17;5223:62;:::i;:::-;-1:-1:-1;;;5344:2:19;5304:16;;;5336:11;;;5329:40;5394:13;;5416:63;5394:13;5465:2;5457:11;;5450:4;5438:17;;5416:63;:::i;:::-;5499:17;5518:2;5495:26;;5130:397;-1:-1:-1;;;;5130:397:19:o;5532:203::-;-1:-1:-1;;;;;5696:32:19;;;;5678:51;;5666:2;5651:18;;5633:102::o;5740:490::-;-1:-1:-1;;;;;6009:15:19;;;5991:34;;6061:15;;6056:2;6041:18;;6034:43;6108:2;6093:18;;6086:34;;;6156:3;6151:2;6136:18;;6129:31;;;5740:490;;6177:47;;6204:19;;6196:6;6177:47;:::i;:::-;6169:55;5943:287;-1:-1:-1;;;;;;5943:287:19:o;6235:187::-;6400:14;;6393:22;6375:41;;6363:2;6348:18;;6330:92::o;6427:177::-;6573:25;;;6561:2;6546:18;;6528:76::o;6609:221::-;;6758:2;6747:9;6740:21;6778:46;6820:2;6809:9;6805:18;6797:6;6778:46;:::i;6835:356::-;7037:2;7019:21;;;7056:18;;;7049:30;7115:34;7110:2;7095:18;;7088:62;7182:2;7167:18;;7009:182::o;7196:411::-;7398:2;7380:21;;;7437:2;7417:18;;;7410:30;7476:34;7471:2;7456:18;;7449:62;-1:-1:-1;;;7542:2:19;7527:18;;7520:45;7597:3;7582:19;;7370:237::o;7794:128::-;;7865:1;7861:6;7858:1;7855:13;7852:2;;;7871:18;;:::i;:::-;-1:-1:-1;7907:9:19;;7842:80::o;7927:168::-;;8033:1;8029;8025:6;8021:14;8018:1;8015:21;8010:1;8003:9;7996:17;7992:45;7989:2;;;8040:18;;:::i;:::-;-1:-1:-1;8080:9:19;;7979:116::o;8100:125::-;;8168:1;8165;8162:8;8159:2;;;8173:18;;:::i;:::-;-1:-1:-1;8210:9:19;;8149:76::o;8230:258::-;8302:1;8312:113;8326:6;8323:1;8320:13;8312:113;;;8402:11;;;8396:18;8383:11;;;8376:39;8348:2;8341:10;8312:113;;;8443:6;8440:1;8437:13;8434:2;;;-1:-1:-1;;8478:1:19;8460:16;;8453:27;8283:205::o;8493:136::-;;8560:5;8550:2;;8569:18;;:::i;:::-;-1:-1:-1;;;8605:18:19;;8540:89::o;8634:380::-;8719:1;8709:12;;8766:1;8756:12;;;8777:2;;8831:4;8823:6;8819:17;8809:27;;8777:2;8884;8876:6;8873:14;8853:18;8850:38;8847:2;;;8930:10;8925:3;8921:20;8918:1;8911:31;8965:4;8962:1;8955:15;8993:4;8990:1;8983:15;9019:127;9080:10;9075:3;9071:20;9068:1;9061:31;9111:4;9108:1;9101:15;9135:4;9132:1;9125:15;9151:133;-1:-1:-1;;;;;;9227:32:19;;9217:43;;9207:2;;9274:1;9271;9264:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./tokens/nf-token-metadata.sol\";\nimport \"./tokens/nf-token-enumerable.sol\";\nimport \"./access/AccessControl.sol\";\n\n\ncontract CoolSaurusKid is \n    NFTokenEnumerable,\n    NFTokenMetadata,\n    AccessControl\n{\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    constructor(string memory _name, string memory _symbol)\n    {\n        nftName = _name;\n        nftSymbol = _symbol;\n        \n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    function mint(address _to, uint256 _tokenId, string calldata _uri)\n        external\n        onlyRole(MINTER_ROLE) \n    {\n        super._mint(_to, _tokenId);\n        super._setTokenUri(_tokenId, _uri);\n    }\n\n    function burn(uint256 _tokenId)\n        external\n        onlyRole(BURNER_ROLE)\n    {\n        super._burn(_tokenId);\n    }\n\n    function _mint(address _to, uint256 _tokenId\n    )\n        internal\n        override(NFToken, NFTokenEnumerable)\n        virtual\n    {\n        NFTokenEnumerable._mint(_to, _tokenId);\n    }\n\n    function _burn(uint256 _tokenId)\n        internal\n        override(NFTokenMetadata, NFTokenEnumerable)\n        virtual\n    {\n        NFTokenEnumerable._burn(_tokenId);\n        if (bytes(idToUri[_tokenId]).length != 0)\n        {\n            delete idToUri[_tokenId];\n        }\n    }\n\n    function _removeNFToken(address _from, uint256 _tokenId)\n        internal\n        override(NFToken, NFTokenEnumerable)\n    {\n        NFTokenEnumerable._removeNFToken(_from, _tokenId);\n    }\n\n    function _addNFToken(address _to, uint256 _tokenId)\n        internal\n        override(NFToken, NFTokenEnumerable)\n    {\n        NFTokenEnumerable._addNFToken(_to, _tokenId);\n    }\n\n    function _getOwnerNFTCount(address _owner)\n        internal\n        override(NFToken, NFTokenEnumerable)\n        view\n        returns (uint256)\n    {\n        return NFTokenEnumerable._getOwnerNFTCount(_owner);\n    }\n}",
  "sourcePath": "/Users/younghoon/yh/nft-sample/contracts/CoolSaurusKid.sol",
  "ast": {
    "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/CoolSaurusKid.sol",
    "exportedSymbols": {
      "AccessControl": [
        527
      ],
      "AddressUtils": [
        2232
      ],
      "Context": [
        1997
      ],
      "CoolSaurusKid": [
        186
      ],
      "ERC165": [
        2244
      ],
      "ERC721": [
        855
      ],
      "ERC721Enumerable": [
        700
      ],
      "ERC721Metadata": [
        724
      ],
      "ERC721TokenReceiver": [
        742
      ],
      "IAccessControl": [
        600
      ],
      "NFToken": [
        1975
      ],
      "NFTokenEnumerable": [
        1182
      ],
      "NFTokenMetadata": [
        1305
      ],
      "Strings": [
        2200
      ],
      "SupportsInterface": [
        2317
      ]
    },
    "id": 187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-metadata.sol",
        "file": "./tokens/nf-token-metadata.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1306,
        "src": "58:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-enumerable.sol",
        "file": "./tokens/nf-token-enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1183,
        "src": "99:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 528,
        "src": "142:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1182,
              "src": "212:17:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "212:17:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1305,
              "src": "235:15:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "235:15:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 527,
              "src": "256:13:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "256:13:0"
          }
        ],
        "contractDependencies": [
          527,
          600,
          700,
          724,
          855,
          1182,
          1305,
          1975,
          1997,
          2244,
          2317
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186,
          527,
          1305,
          724,
          1182,
          700,
          1975,
          2317,
          2244,
          600,
          1997,
          855
        ],
        "name": "CoolSaurusKid",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 15,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "276:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "324:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 12,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "314:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "314:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "282c51f3",
            "id": 20,
            "mutability": "constant",
            "name": "BURNER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "344:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 16,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4255524e45525f524f4c45",
                  "id": 18,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "392:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  },
                  "value": "BURNER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  }
                ],
                "id": 17,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "382:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "382:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "473:122:0",
              "statements": [
                {
                  "expression": {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "493:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "483:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "483:15:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "508:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "508:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "557:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 37,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "577:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "577:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "546:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "546:42:0"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "425:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "446:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "424:44:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:0:0"
            },
            "scope": 186,
            "src": "413:182:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "720:87:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "742:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "747:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "730:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "730:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "730:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "785:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 65,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "795:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 61,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "766:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1304,
                      "src": "766:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "766:34:0"
                }
              ]
            },
            "functionSelector": "d3fc9864",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "702:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 52,
                "modifierName": {
                  "id": 50,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "693:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "693:21:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "615:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "628:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "646:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:53:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:0:0"
            },
            "scope": 186,
            "src": "601:206:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "896:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "918:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "906:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1286,
                      "src": "906:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "906:21:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74,
                    "name": "BURNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "879:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75,
                "modifierName": {
                  "id": 73,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "870:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:21:0"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "827:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "826:18:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:0"
            },
            "scope": 186,
            "src": "813:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              992,
              1781
            ],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1073:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1107:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1112:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1083:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "1083:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:38:0"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 90,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1025:7:0"
                },
                {
                  "id": 91,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1034:17:0"
                }
              ],
              "src": "1016:36:0"
            },
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "955:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "968:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:36:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:0"
            },
            "scope": 186,
            "src": "940:188:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1048,
              1286
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1257:158:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 113,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1291:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 110,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1267:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1048,
                      "src": "1267:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:33:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 118,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "1320:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 120,
                            "indexExpression": {
                              "id": 119,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1328:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1320:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1314:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1314:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1314:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1314:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1349:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1314:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 131,
                  "nodeType": "IfStatement",
                  "src": "1310:99:0",
                  "trueBody": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1360:49:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1374:24:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 125,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "1381:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "id": 126,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1389:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1381:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1374:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 108,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 106,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1305,
                  "src": "1201:15:0"
                },
                {
                  "id": 107,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1218:17:0"
                }
              ],
              "src": "1192:44:0"
            },
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1149:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:18:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:0"
            },
            "scope": 186,
            "src": "1134:281:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1120,
              1844
            ],
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1544:66:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1587:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 147,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1594:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1554:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1120,
                      "src": "1554:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:49:0"
                }
              ]
            },
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 141,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 139,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1512:7:0"
                },
                {
                  "id": 140,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1521:17:0"
                }
              ],
              "src": "1503:36:0"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1445:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1460:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1444:33:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:0:0"
            },
            "scope": 186,
            "src": "1421:189:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1166,
              1877
            ],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1734:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 164,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1774:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1779:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 161,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1744:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1166,
                      "src": "1744:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:44:0"
                }
              ]
            },
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 157,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1702:7:0"
                },
                {
                  "id": 158,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1711:17:0"
                }
              ],
              "src": "1693:36:0"
            },
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1637:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1650:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:31:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 186,
            "src": "1616:179:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1181,
              1890
            ],
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1949:67:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1966:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "1966:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "1959:50:0"
                }
              ]
            },
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 175,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 173,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1878:7:0"
                },
                {
                  "id": 174,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1887:17:0"
                }
              ],
              "src": "1869:36:0"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1828:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:16:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1936:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:9:0"
            },
            "scope": 186,
            "src": "1801:215:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 187,
        "src": "181:1837:0"
      }
    ],
    "src": "33:1985:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/CoolSaurusKid.sol",
    "exportedSymbols": {
      "AccessControl": [
        527
      ],
      "AddressUtils": [
        2232
      ],
      "Context": [
        1997
      ],
      "CoolSaurusKid": [
        186
      ],
      "ERC165": [
        2244
      ],
      "ERC721": [
        855
      ],
      "ERC721Enumerable": [
        700
      ],
      "ERC721Metadata": [
        724
      ],
      "ERC721TokenReceiver": [
        742
      ],
      "IAccessControl": [
        600
      ],
      "NFToken": [
        1975
      ],
      "NFTokenEnumerable": [
        1182
      ],
      "NFTokenMetadata": [
        1305
      ],
      "Strings": [
        2200
      ],
      "SupportsInterface": [
        2317
      ]
    },
    "id": 187,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-metadata.sol",
        "file": "./tokens/nf-token-metadata.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1306,
        "src": "58:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/tokens/nf-token-enumerable.sol",
        "file": "./tokens/nf-token-enumerable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 1183,
        "src": "99:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/younghoon/yh/nft-sample/contracts/access/AccessControl.sol",
        "file": "./access/AccessControl.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 187,
        "sourceUnit": 528,
        "src": "142:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1182,
              "src": "212:17:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "212:17:0"
          },
          {
            "baseName": {
              "id": 7,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1305,
              "src": "235:15:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "235:15:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "AccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 527,
              "src": "256:13:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "256:13:0"
          }
        ],
        "contractDependencies": [
          527,
          600,
          700,
          724,
          855,
          1182,
          1305,
          1975,
          1997,
          2244,
          2317
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 186,
        "linearizedBaseContracts": [
          186,
          527,
          1305,
          724,
          1182,
          700,
          1975,
          2317,
          2244,
          600,
          1997,
          855
        ],
        "name": "CoolSaurusKid",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 15,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "276:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "324:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 12,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "314:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "314:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "282c51f3",
            "id": 20,
            "mutability": "constant",
            "name": "BURNER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 186,
            "src": "344:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 16,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4255524e45525f524f4c45",
                  "id": 18,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "392:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  },
                  "value": "BURNER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  }
                ],
                "id": 17,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "382:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "382:24:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "473:122:0",
              "statements": [
                {
                  "expression": {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 28,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "493:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "483:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "483:15:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1197,
                      "src": "508:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "508:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "557:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 37,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "577:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "577:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "546:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "546:42:0"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "425:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "446:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "424:44:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:0:0"
            },
            "scope": 186,
            "src": "413:182:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "720:87:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "742:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "747:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "730:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "730:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "730:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "785:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 65,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "795:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 61,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "766:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1304,
                      "src": "766:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "766:34:0"
                }
              ]
            },
            "functionSelector": "d3fc9864",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "702:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 52,
                "modifierName": {
                  "id": 50,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "693:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "693:21:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "615:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "628:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "646:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:53:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:0:0"
            },
            "scope": 186,
            "src": "601:206:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "896:38:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "918:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 77,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "906:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CoolSaurusKid_$186_$",
                          "typeString": "type(contract super CoolSaurusKid)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1286,
                      "src": "906:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "906:21:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 74,
                    "name": "BURNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20,
                    "src": "879:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 75,
                "modifierName": {
                  "id": 73,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 258,
                  "src": "870:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:21:0"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "827:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "826:18:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:0"
            },
            "scope": 186,
            "src": "813:121:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              992,
              1781
            ],
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "1073:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1107:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 98,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1112:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1083:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 992,
                      "src": "1083:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:38:0"
                }
              ]
            },
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 90,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1025:7:0"
                },
                {
                  "id": 91,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1034:17:0"
                }
              ],
              "src": "1016:36:0"
            },
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "955:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "968:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:36:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:0"
            },
            "scope": 186,
            "src": "940:188:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1048,
              1286
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1257:158:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 113,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1291:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 110,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1267:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1048,
                      "src": "1267:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:33:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 118,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "1320:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 120,
                            "indexExpression": {
                              "id": 119,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1328:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1320:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1314:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1314:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1314:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1314:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1349:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1314:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 131,
                  "nodeType": "IfStatement",
                  "src": "1310:99:0",
                  "trueBody": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1360:49:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1374:24:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 125,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "1381:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "id": 126,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "1389:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1381:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1374:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 108,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 106,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1305,
                  "src": "1201:15:0"
                },
                {
                  "id": 107,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1218:17:0"
                }
              ],
              "src": "1192:44:0"
            },
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1149:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:18:0"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:0"
            },
            "scope": 186,
            "src": "1134:281:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1120,
              1844
            ],
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1544:66:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "1587:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 147,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1594:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1554:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1120,
                      "src": "1554:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:49:0"
                }
              ]
            },
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 141,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 139,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1512:7:0"
                },
                {
                  "id": 140,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1521:17:0"
                }
              ],
              "src": "1503:36:0"
            },
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1445:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1460:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1444:33:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:0:0"
            },
            "scope": 186,
            "src": "1421:189:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1166,
              1877
            ],
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1734:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 164,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1774:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "1779:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 161,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1744:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1166,
                      "src": "1744:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:44:0"
                }
              ]
            },
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 157,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1702:7:0"
                },
                {
                  "id": 158,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1711:17:0"
                }
              ],
              "src": "1693:36:0"
            },
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1637:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1650:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:31:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1734:0:0"
            },
            "scope": 186,
            "src": "1616:179:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1181,
              1890
            ],
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "1949:67:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "1966:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1182_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "1966:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "1959:50:0"
                }
              ]
            },
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 175,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 173,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1975,
                  "src": "1878:7:0"
                },
                {
                  "id": 174,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1182,
                  "src": "1887:17:0"
                }
              ],
              "src": "1869:36:0"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1828:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:16:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1936:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:9:0"
            },
            "scope": 186,
            "src": "1801:215:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 187,
        "src": "181:1837:0"
      }
    ],
    "src": "33:1985:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1001": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8cBd75AE8e7d63c2B2E13ad80FB451b04A8fd3de",
      "transactionHash": "0x63f0ec2956b0ce98333f8256f246f5e80d335eb02c342b601af0933496f0e090"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2022-03-02T07:08:53.912Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\"."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}